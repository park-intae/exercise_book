SELECT ENAME, UPPER(ENAME), LOWER(ENAME), INITCAP(ENAME)
FROM EMP;

SELECT * FROM EMP
WHERE UPPER(ENAME) = UPPER('smith');

SELECT * FROM EMP
WHERE UPPER(ENAME) LIKE UPPER('%smi%');

SELECT CONCAT(EMPNO, ENAME)
		CONCAT(EMPNO, CONCAT(':', ENAME))
FROM EMP
WHERE ENAME = 'SMITH';

SELECT EMPNO || ENAME, 
		EMPNO || ':' || ENAME
FROM EMP
WHERE ENAME = 'SMITH';

SELECT ROUND(1.234)
FROM EMP;

SELECT ROUND(1.234)
FROM DEPT;

SELECT * FROM DUAL;

SELECT ROUND(1.234)
FROM DUAL;

SELECT SYSDATE AS NOW,
		SYSDATE-1 AS YESTERDAY,
		SYSDATE+1 AS TOMORRWO
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 현재날짜시간
FROM DUAL;

SELECT * FROM EMP
WHERE HIREDATE BETWEEN '1981-01-01' AND '1981-12-31';

SELECT EMPNO, ENAME, SAL, COMM, SAL+COMM,
		NVL(COMM, 0),
		SAL * 12 + NVL(COMM ,0) AS ANNSAL
FROM EMP
ORDER BY ANNSAL;

SELECT * FROM EMP;

SELECT COUNT(COMM) FROM EMP;

SELECT COUNT(*) FROM EMP;

SELECT MAX(SAL) FROM EMP
WHERE DEPTNO = 20;

SELECT MIN(HIREDATE) FROM EMP
WHERE DEPTNO  = 20;

SELECT AVG(SAL) FROM EMP
WHERE DEPTNO = 20;

SELECT DEPTNO, AVG(SAL)
FROM EMP
GROUP BY DEPTNO; -- 행의 갯수임 > DEPTNO의 수에 따라 행이 결정됨 > 부서 수 =  행

SELECT DEPTNO, COUNT(*)
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO, COUNT(*) ECOUNT
FROM EMP
GROUP BY DEPTNO
ORDER BY ECOUNT DESC;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY JOB; -- 부서 번호 및 직책 별 평균 급여

SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY JOB;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB 
HAVING AVG(SAL) >= 200
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP 
WHERE SAL <= 3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO, JOB;

